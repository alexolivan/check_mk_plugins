#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +---------------------------------------------------------------------+
# |         ___                       _   ____   _  _                   |
# |        |_ _|___ ___  ___ __ _ ___| |_|___ \ | || |  __  __          |
# |         | |/ __/ _ \/ __/ _` / __| __| __) || || |_ \ \/ /          |
# |         | | (_|  __/ (_| (_| \__ \ |_ / __/ |__   _| >  <           |
# |        |___\___\___|\___\__,_|___/\__|_____(_) |_|(_)_/\_\          | 
# |                                                                     |
# | Copyright Alejandro Olivan 2016                 alex@alexolivan.com |
# +---------------------------------------------------------------------+
# | A Check_mk agent to monitor Icecast 2.4.x servers on Linux          |
# | This file contains the check definition / inventory code.           |
# +---------------------------------------------------------------------+
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
# MA  02110-1301, USA.


icecast2_agent_fields = (
    'port',
    'currentlisteners',
    'status',
    'peaklisteners'
)

factory_settings["icecast2_default_levels"] = {
    "currentlisteners" : (1,0),
    "status" : (1,1),
    "peaklisteners" : (0,0),
    "maxlisteners" : 1024
}


def evaluate_icecast2_scalar_value(valuestr, valuewarnstr, valuecritstr):
    value = int(valuestr)
    valuewarn = int(valuewarnstr)
    valuecrit = int(valuecritstr)
    if valuewarn != 0 or valuecrit != 0:
        if value < valuecrit:
            return 2
        elif value < valuewarn:
            return 1
        else:
            return 0
    else:
        return 0


def evaluate_icecast2_max_scalar_value(valuestr, valuewarnstr, valuecritstr):
    value = int(valuestr)
    valuewarn = int(valuewarnstr)
    valuecrit = int(valuecritstr)
    if valuewarn != 0 or valuecrit != 0:
        if value > valuecrit:
            return 2
        elif value > valuewarn:
            return 1
        else:
            return 0
    else:
        return 0


def inventory_icecast2(info):
    for line in info:
        yield line[0], {}


def check_icecast2(item, params, info):
    for line in info:
    	if line[0] == item:
    	    status = 0
    	    perfdata = []
    	    message = "Icecast 2.4.x, port %s " % item
    	    for index, value in enumerate(line):
    	        if index == 0:
    	            continue
                if index == 1:
                    warn, crit = params[shoutcastv2_agent_fields[1]]
                    result = evaluate_shoutcastv2_scalar_value(value, warn, crit)
                    if result > status:
                	status = result
                    perfdata.append((shoutcastv2_agent_fields[1],value, warn, crit, 0, params[shoutcastv2_agent_fields[3]])
                    warn, crit = params[shoutcastv2_agent_fields[3]]
                    result = evaluate_shoutcastv2_max_scalar_value(value, warn, crit)
                    if result > status:
                        status = result
                    perfdata.append((shoutcastv2_agent_fields[3],line[3], warn, crit)                    
                if index == 2:
                    warn, crit = params[shoutcastv2_agent_fields[2]]
                    result = evaluate_shoutcastv2_scalar_value(value, warn, crit)
                    if result > status:
                        status = result
                    perfdata.append((shoutcastv2_agent_fields[2],value, warn, crit, "", ""))
                message += ", %s: %s" % (shoutcastv2_agent_fields[index], value)
            return status, message, perfdata


check_info["icecast2"] = {
    'check_function': check_icecast2,
    'inventory_function': inventory_icecast2,
    'service_description': 'Icecast 2.4.x',
    'has_perfdata': True,
    "group": "icecast2",
    "default_levels_variable": "icecast2_default_levels",    
}